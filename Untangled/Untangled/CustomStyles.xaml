<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 
        Custom scrollbar, inheriting styles from Metro theme 
        Source code:https: //github.com/0xdeafcafe/MetroWPFTemplate/blob/master/Metro%20WPF%20Template/Metro/Controls/
    -->

    <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White" Offset="0.0" />
                <GradientStop Color="White" Offset="0.6" />
                <GradientStop Color="#DDDDDD" Offset="1.2"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush"
        StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Margin="0"
                        CornerRadius="0"
                        Background="#e8e7e7"
                        BorderThickness="0">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Name="RepeatButton"
                            Fill="#999999"
                            Data="{Binding Path=Content,
                                RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsPressed" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RepeatButton" Property="Fill" Value="{DynamicResource ApplicationAccentBrushSecondary}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RepeatButton" Property="Fill" Value="{DynamicResource ApplicationAccentBrush}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                      Name="Scroller"
                      CornerRadius="0"
                      Margin="0"
                      Background="#bab9b9"
                      BorderThickness="0" />

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsDragging" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Scroller" Property="Background" Value="#9e9e9e" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsDragging" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Scroller" Property="Background" Value="#9e9e9e" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
              Grid.RowSpan="3"
              CornerRadius="0"
              Background="#e8e7e7" />

            <RepeatButton
              Grid.Row="0"
              Style="{StaticResource ScrollBarLineButton}"
              Height="18"
              Command="ScrollBar.LineUpCommand"
              Content="M 0,4 L 8,4 L 4,0 Z" />

            <Track
              Name="PART_Track"
              Grid.Row="1"
              IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="5,0,5,0"
                        Background="{StaticResource HorizontalNormalBrush}"
                        BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>

            <RepeatButton
              Grid.Row="3"
              Style="{StaticResource ScrollBarLineButton}"
              Height="18"
              Command="ScrollBar.LineDownCommand"
              Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
            Grid.ColumnSpan="3"
            CornerRadius="0"
            Background="#3e3e42" />

            <RepeatButton
                Grid.Column="0"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />

            <Track
                Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">

                <Track.DecreaseRepeatButton>
                    <RepeatButton
                    Style="{StaticResource ScrollBarPageButton}"
                    Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="0,5,0,5"
                        Background="{StaticResource NormalBrush}"
                        BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Column="3"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="1"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--
        Custom style for a vertical separator, apprently by default it is 
        horizontal. This will make it vertical.
    -->
    <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Background" Value="#D4D4D4"></Setter>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform Angle="90"/>
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalCardStyleSeperator" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
    <Setter Property="Margin" Value="10,0,0,0"/>
    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Background" Value="#eaeaea"></Setter>
    <Setter Property="LayoutTransform">
        <Setter.Value>
            <TransformGroup>
                <TransformGroup.Children>
                    <TransformCollection>
                        <RotateTransform Angle="90"/>
                    </TransformCollection>
                </TransformGroup.Children>
            </TransformGroup>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="TabVisibility" TargetType="{x:Type StackPanel}">
        <Setter Property="Visibility" Value="Visible"></Setter>
    </Style>
    
    
    <!--
        Form Tool Bar: Close button
    -->
    <ControlTemplate x:Key="CloseButton" TargetType="{x:Type Button}">
        <Grid>
            <Image Name="Normal" Source="Images/close.png"/>
            <Image Name="Hover" Source="Images/close_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Form Tool Bar: Minimize Button
    -->
    <ControlTemplate x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Grid>
            <Image Name="Normal" Source="Images/minimize.png"/>
            <Image Name="Hover" Source="Images/minimize_hover.png" Visibility="Hidden"/>
            <Image Name="Pressed" Source="Images/minimize_press.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--
        Side Bar: Settings button
    -->
    <ControlTemplate x:Key="SettingsButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/settings.png"/>
            <Image x:Name="Hover" Source="Images/settings_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Side Bar: Rules Button
    -->
    <ControlTemplate x:Key="RulesButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/rules.png"/>
            <Image x:Name="Hover" Source="Images/rules_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Side Bar: Back Button
    -->
    <ControlTemplate x:Key="BackButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/back_dark.png"/>
            <Image x:Name="Hover" Source="Images/back_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Side Bar: OpenFolder Button Button
    -->

    <ControlTemplate x:Key="OkButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/openfolder.png"/>
            <Image x:Name="Hover" Source="Images/openfolder_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <BooleanToVisibilityConverter x:Key="settingsPanelVisibility" />

    <!--
        Fade in effect for back button
    -->

    <Style TargetType="Button" x:Key="BackButtonStyle">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="0.0" To="1.0" Duration="0:0:0.2" Timeline.DesiredFrameRate="30"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
        Fade in effect for back button
    -->

    <Style TargetType="ScrollViewer" x:Key="SettingsStyle">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="0.0" To="1.0" Duration="0:0:0.2" Timeline.DesiredFrameRate="30"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
        Side Bar: Submit Button
    -->

    <ControlTemplate x:Key="SubmitButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/save.png"/>
            <Image x:Name="Hover" Source="Images/save_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--
        Side Bar: Cancel Button
    -->

    <ControlTemplate x:Key="CancelButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/cancel.png"/>
            <Image x:Name="Hover" Source="Images/cancel_hover.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--
        Side Bar: Pin Button
    -->

    <ControlTemplate x:Key="PinButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/no_pin.png"/>
            <Image x:Name="Hover" Source="Images/no_pin.png" Visibility="Hidden"/>
            <Image x:Name="Pressed" Source="Images/no_pin.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Side Bar: No Pin Button
    -->

    <ControlTemplate x:Key="NoPinButton" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/pin.png"/>
            <Image x:Name="Hover" Source="Images/pin.png" Visibility="Hidden"/>
            <Image x:Name="Pressed" Source="Images/pin.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--
        Side Bar: Timer change Button
    -->

    <ControlTemplate x:Key="IncreaseTimerSpeed" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/quick.png"/>
            <Image x:Name="Hover" Source="Images/quick.png" Visibility="Hidden"/>
            <Image x:Name="Pressed" Source="Images/quick.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Side Bar: Change Properties
    -->

    <ControlTemplate x:Key="ChangeProperties" TargetType="{x:Type Button}">
        <Grid>
            <Image x:Name="Normal" Source="Images/timer_change.png"/>
            <Image x:Name="Hover" Source="Images/timer_change.png" Visibility="Hidden"/>
            <Image x:Name="Pressed" Source="Images/timer_change.png" Visibility="Hidden"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        Rounded Textbox
    -->
    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


</ResourceDictionary>